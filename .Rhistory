num1<- 7
num1
class(num1)
num1<- 7
mode(num1)
typeof(num1)
num2= 16.82
class(num2)
mode(num2)
typeof(num2)
is.integer(num2)
y = as.integer(num2)
class(y)
mode(y)
typeof(y)
as.integer("3.14")
as.integer("Joe")
as.integer(TRUE)
#Character
char1='A'
#Character
char1='A'
char1
mode(char1)
typeof(char1)
char2 = 'cientista'
char2
char2 = 'cientista'
char2
mode(char2)
typeof(char2)
char3 = c('Data', 'Science')
char3 = c('Data', 'Science')
compl = 2.5 +4i
compl
mode(compl)
typeof(compl)
sqrt(-1+0i)
sqrt(-1+0i)
x = 1; y = 2
z = x>y
z
class(z)
u = true; v = false
u = TRUE ; v = FALSE
class(u)
setwd("~/DSA/RAZure/DSA.SV.RAzureML.Cap04")
search()
search()
demo("graphics")
x = 5:7
y = 8:10
plot(x,y)
x = 5:7
y = 8:10
plot(x,y)
help(plot)
?plot
alt<-c(145,167,176,123,150)
larg<-c(51,63,64,40,55)
plot(alt,larg)
#plot de dataframes
?lynx
plot(lynx)
plot(lynx, ylab = "Plots com DF", xlab="observacao")
search()
plot(lynx, ylab = "Plots com DF", xlab="observacao")
plot(lynx, main = "Plos com DF", col = 'red')
libray(datasets)
library(datasets)
hist(warpbreaks$breaks)
hist(warpbreaks$breaks)
transform(airquality, month = factor(month))
transform(airquality, Month = factor(Month))
boxplot(Ozone ~ Month, airquality , xlab = "Month", ylab = "Ozone(ppb)")
?par
par()
par('pch')
par('lty')
par('pch')
x = 2:4
plot(x, pch = 'c')
par(mfrow = c(2,2), col.axis = "red")
plt(1:8, las = 0, xlab = "xlab", ylab = "ylab", main = "LAS = 1")
plOt(1:8, las = 0, xlab = "xlab", ylab = "ylab", main = "LAS = 1")
plot(1:8, las = 0, xlab = "xlab", ylab = "ylab", main = "LAS = 1")
plot(1:8, las = 3, xlab = "xlab", ylab = "ylab", main = "LAS = 3")
plot(1:8, las = 3, xlab = "xlab", ylab = "ylab", main = "LAS = 3")
plot(1:8, las = 3, xlab = "xlab", ylab = "ylab", main = "LAS = 3")
plot(1:8, las = 3, xlab = "xlab", ylab = "ylab", main = "LAS = 3")
legend("topright", pch = 1, col = c("blue", "red"), legend = c("var1", "var2"))
plot(1:8, las = 3, xlab = "xlab", ylab = "ylab", main = "LAS = 3")
legend("topright", pch = 1, col = c("blue", "red"), legend = c("var1", "var2"))
par(mfrow = c(1,1))
colors()
colors()
#Salvando graficos
#png
png("Graficos1.png", width = 500, height = 500, res = 72)
plot(iris$Sepal.Length, iris$Petal.Length,
col = iris$Species,
main = "Grafico gerado a partir do Iris")
dev.off()
#Extendendo as funcoes do plot
install.packages('plotrix')
library(plotrix)
?plotrix
par(mfrow = c(1,1), col.axis = "red")
par(mfrow = c(1,1), col.axis = "red")
plot(1:6, las = 3, xlab = "lty 1:6", ylab = "", main = "Mais opcoes ao plot")
ablineclip(v = 1, lty = 1, col = "sienna2", lwd = 2)
ablineclip(v = 2, lty = 1, col = "sienna2", lwd = 2)
ablineclip(h = 2, lty = 1, col = "hotpink2", lwd = 2)
ablineclip(h = 2, lty = 4, col = "hotpink2", lwd = 2)
ablineclip(h = 2, lty = 4, col = "hotpink2", lwd = 2)
plot(lyns )
plot(lynx)
plot(cars$speed, type = "s", col = "red", bty = "n", xlab = "Cars ID", ylab = "")
text(8,14, "Velocidade", cex = 0.85, col = "red")
par(new = T)
plot(cars$dist, type = "s", bty = "n", ann = F, axes = F,col = "darkblue")
axis(side=4)
text(37.18, "Distancia", cex = 0.85, col = "darkblue")
title (main = "Velocidade x Distancia")
df<-read.csv('C:\Users\THIAGO\Documents\DSA\RAZure\ScriptsProntos\Arquivos-Cap04\pibpercap.csv', stringAsFactors = F)
df<-read.csv('C:\\Users\\THIAGO\\Documents\\DSA\\RAZure\\ScriptsProntos\\Arquivos-Cap04\\pibpercap.csv', stringAsFactors = F)
df<-read.csv('pibpercap.csv', stringAsFactors = F)
df<-read.csv('pibpercap.csv')#, stringAsFactors = F)
df_1982<-subset(df, ano==1982)
plot(expectativa ~ pibpercap, ddata =  df_1982, log = "x")
view(df)
View(df)
plot(expectativa ~ pibpercap, ddata =  df_1982, log = "x")
View(df_1982)
plot(pop ~ pibpercap, ddata =  df_1982, log = "x")
y_pred = predict(classifier, newdata = test_set[-3], type ='class')
plot(pop ~ pibpercap, ddata =  df_1982, log = "x")
set.seed(67)
x = rnorm(10,5,7)
y = rpois(10,7)
z = rnorm(10,6,7)
t= rpois(10,9)
plot(x,y,col = 123, pch = 10, main = "Multi Scatterplot", col.main = "red", cex.main = 1+5, xlab = "Variavel indepentede",
ylab = "variavel dependente")
ylab = "variavel dependente")
plot(x,y,col = 123, pch = 10, main = "Multi Scatterplot",
col.main = "red", cex.main = 1.5, xlab = "Variavel indepentede",
ylab = "variavel dependente")
col.main = "red", cex.main = 1.5, xlab = "Variavel indepentede",
ylab = "variavel dependente")
points(z,t, col = "blue", pch = 4)
points(y,t, col = 7777, pch = 9)
##BoxSplots
?boxplot
?sleep
#permite utilizar as colunas sem especificar o nome do dataset
attach(sleep)
sleepboxplot = boxplot(data = sleep, extra ~ group,
main = "Duracao de sono",
col.main = "red", ylab = "Horas", xlab = "Droga")
media = by(extra, group, mean)
points(media, col = "red")
horboxplot = boxplot(data = slepp, extra ~ group,
ylab = "", xlab ="", horizontal = T)
horboxplot = boxplot(data = sleep, extra ~ group,
ylab = "", xlab ="", horizontal = T)
plot(cars)
dados = cars$speed
hist(dados)
hist(dados, breaks = 10, main = "Histogramas")
hist(dados, labels = T,  breaks = c(0,5,10,20,30), main = "Histogramas")
hist(dados, labels = T, ylim = (0,10), breaks = 10, main = "Histogramas")
hist(dados, labels = T, ylim = c(0,10), breaks = 10, main = "Histogramas")
grafico <- hist(dados, breaks = 10, main = "Histogramas")
xaxis = seq(min(dados), max(dados), length = 10)
yaxis = dnorm(xaxis, mean = mean(dados), sd(dados))
lines(xaxis, yaxis, col = "red")
yaxis = yaxis*diff(grafico$mids)*length(dados)
lines(xaxis, yaxis, col = "red")
